import osimport tkinter as tkfrom new_bot import *from subprocess import Popenimport threading#from process import *import requestsimport hashlibprocess = ''import json#TODO: PREISSUCHE#TODO: negative preissperre#TODO:#def get_coin_sell():#    partnerid = '12158'#    secretkey = 'fdbc4d17393168e074d8cf98865651ff'#    timestamp = str(int(time.time()))#    hash = hashlib.md5((str(partnerid)+str(secretkey)+str(timestamp)).encode())#    minbuy = '25000' #   maxbuy = '80000'###    dsfut_path = r'https://dsfut.net/api/20/xb/' + partnerid + r'/' + timestamp + r'/' + str(hash.hexdigest() + r'?min_buy=' + minbuy + r'?max_buy='+maxbuy)#    while 1:#        output = requests.get(dsfut_path).text#        if output.__contains__(r'Queue is empty'): #           pass #       elif output.__contains__(r'Parameters Error'): ##           telegram_bot_sendtext('Kein Spieler im Preissegment') #       else: #           print(output)  #          telegram_bot_sendtext(output)  ##          break  #      time.sleep(1)status = {        'get_pixel_colordown': 'ok',        'get_pixel_colorup'  : 'nix',        'get_pixel_colorup'  : 'nix',        'get_pixel_colora'   : '100full',        'search_loopanbieten1'      : '100full',        'get_pixel_colordown': 'nix',        'suche_pics2gekauftabgelaufen':'bietoption',        }def myCmd():    Popen(["python", "start_gimxy.py"], shell=True)def abortProcess():    process.kill()############def starting():    threading.Thread(target=bot.start).start()    threading.Thread(target=automatic_update).start()    threading.Thread(target=get_coin_sell).start()def telegram():    threading.Thread(target=bot.tele.other_bot).start()def automatic_update():    while 1:        my_string_var.set(bot.status)        statistic_var.set(str(bot.cards) + " von (" + str(bot.insgesamt) + ")")        bot.price       = int(entry1.get())        bot.buy_price   = int(entry2.get())        bot.card_price  = float(entry3.get())        sleep(5)        if bot.stoerung is 1 and bot.solver is 'ON':            image = pyautogui.screenshot()            image = np.array(image)            if bot.vision.suche_pics('extended')[0] != -1:                bot.stoerung         = 0                bot.get_out          = 1                bot.vision.get_out   = 1                bot.xbox_cmd.get_out = 1                bot.vision.regions['transfermarkt_found'][0] = 0                bot.tele.telegram_bot_sendtext('getout')            elif bot.vision.suche_pics('ok')[0] != -1:                bot.xbox_cmd.press_button('a')                bot.tele.telegram_bot_sendtext('ok_pressed_a')            elif bot.vision.get_pixel_diff(image, [bot.getCalibX(-1), bot.getCalibY(+80)], bot.vision.blue, 9) is 1:                bot.xbox_cmd.press_button('b')                sleep(3)                bot.xbox_cmd.press_button('b')                sleep(3)                bot.xbox_cmd.press_button('up')                bot.tele.telegram_bot_sendtext('pixel_blue_pressed_b')            elif bot.vision.suche_pics('ok2')[0] != -1:                bot.xbox_cmd.press_button('a')                bot.tele.telegram_bot_sendtext('ok2_pressed_a')            elif bot.vision.suche_pics('ok3')[0] != -1:                bot.xbox_cmd.press_button('a')                bot.tele.telegram_bot_sendtext('ok3_pressed_a')            elif bot.vision.suche_pics('ok4')[0] != -1:                bot.xbox_cmd.press_button('a')                bot.tele.telegram_bot_sendtext('ok4_pressed_a')            elif bot.vision.suche_pics('bietoption')[0] != -1:                bot.xbox_cmd.press_button('b')                bot.tele.telegram_bot_sendtext('bietoption_pressed_b')            elif bot.vision.suche_pics('transfermarkt_found')[0] != -1:                bot.xbox_cmd.press_button('b')                bot.tele.telegram_bot_sendtext('transfermarkt_found_pressed_b')            elif bot.vision.suche_pics('selling1')[0] != -1:                bot.xbox_cmd.press_button('x')                bot.tele.telegram_bot_sendtext('pressed_x')            elif bot.vision.suche_pics('selling2')[0] != -1:                bot.xbox_cmd.press_button('x')                bot.tele.telegram_bot_sendtext('pressed_x')            elif bot.vision.tess(bot, [1156,220,700,240]).__contains__('OK'):                bot.xbox_cmd.press_button('a')                bot.tele.telegram_bot_sendtext('ok_a')            else:                bot.tele.telegram_bot_sendtext('STÖÖÖÖHRUNG no solution')                print('STÖÖÖÖHRUNG no solution')                bot.solver = 'OFF'def get_coin_sell():    print('Start Coin-Selling')    partnerid = '12158'    secretkey = 'fdbc4d17393168e074d8cf98865651ff'    minbuy = '55000'    while 1:        timestamp = str(int(time.time()))        hash = hashlib.md5((str(partnerid) + str(secretkey) + str(timestamp)).encode())        maxbuy = str(entry_coinsell.get())  ##        dsfut_path = r'https://dsfut.net/api/20/xb/' + partnerid + r'/' + timestamp + r'/' + str(                hash.hexdigest() + r'?min_buy=' + minbuy + r'&max_buy=' + maxbuy)        if bot.coinselling is 'ON':            output = requests.get(dsfut_path).text            if output.__contains__(r'Queue is empty'):                pass            elif output.__contains__(r'Parameters Error'):                bot.tele.telegram_bot_sendtext('Kein Spieler im Preissegment')            elif output.__contains__(r'Timestamp Error'):                bot.tele.telegram_bot_sendtext('Timestamp Error')                time.sleep(5)            elif output.__contains__(r'Please try again in'):                print(output)                sleep(int(str(output)[str(output).find('in') + 6:str(output).find('minutes') - 1])*60)            else:                print(output)                bot.tele.telegram_bot_sendtext(output)                json_output = json.loads(output)                player = json_output['player']                bot.tele.telegram_bot_sendtext(                        'Name:     ' + str(player['name']) + "\n" +                        'Rating:    ' + str(player['rating']) + "\n" +                        'Position:  ' + str(player['position']) + "\n" +                        'Start:       ' + str(player['startPrice']) + "\n" +                        'BuyNow:  ' + str(player['buyNowPrice']) + "\n")                sell_field.set('SELLING - OFF')                bot.coinselling = 'OFF'        time.sleep(1)def bot_on_off():    if bot.run is 'OFF':        start_bot_field.set('RUN')        bot.run = 'ON'    elif  bot.run is 'ON':        start_bot_field.set('PAUSE')        bot.run = 'OFF'    statistic_var.set(str(bot.cards) + " von (" + str(bot.insgesamt) + ")")    bot.price = int(entry1.get())def selling_on_off():    if bot.coinselling is 'OFF':        sell_field.set('SELLING - Running...')        bot.coinselling = 'ON'        bot.solver      = 'ON'    elif bot.coinselling is 'ON':        sell_field.set('SELLING - OFF')        bot.coinselling = 'OFF'        bot.solver      = 'ON'bot = XBOX_BOT()root = tk.Tk()frame = tk.Frame(root)frame.pack()my_string_var = tk.StringVar(value="Please Start!")my_label = tk.Label(frame, textvariable=my_string_var)my_label.pack()statistic_var = tk.StringVar(value="Please Start!")statistic = tk.Label(frame, textvariable=statistic_var)statistic.pack()my_coins_sell = tk.StringVar(value='150000')entry_coinsell = tk.Entry(frame, textvariable=my_coins_sell)entry_coinsell.pack()my_valueprice = tk.StringVar(value='3200')entry1 = tk.Entry(frame, textvariable=my_valueprice)entry1.pack()my_valueprice2 = tk.StringVar(value='2800')entry2 = tk.Entry(frame, textvariable=my_valueprice2)entry2.pack()my_valueprice3 = tk.StringVar(value='0.30')entry3 = tk.Entry(frame, textvariable=my_valueprice3)entry3.pack()start_button    = tk.Button(frame, text="Start Bot", fg="red", command=starting)start_button.pack(side=tk.LEFT)start_bot_field = tk.StringVar(value='OFF')status_button = tk.Button(frame, textvariable=start_bot_field, command=bot_on_off)status_button.pack(side=tk.LEFT)sell_field      = tk.StringVar(value='SELLING OFF')gimx_button = tk.Button(frame, textvariable=sell_field, command=selling_on_off)gimx_button.pack(side=tk.LEFT)telegram_button = tk.Button(frame, text="telegram", command=telegram)telegram_button.pack(side=tk.LEFT)root.bind_all('<Key>', key)root.mainloop()